import StateManager from"../StateManager.js";import GridAnimator from"./GridAnimator.js";import GridCreator from"./GridCreator.js";export default class GridManager{constructor(t){this.DIM=25,this.yOffset=t.getBoundingClientRect().top,this.rows=Math.floor((window.innerHeight-this.yOffset)/this.DIM),this.cols=Math.floor(window.innerWidth/this.DIM);const e=new StateManager;e.setGridElement(t),e.setRows(this.rows),e.setCols(this.cols),this.gridCreator=new GridCreator,this.gridAnimator=new GridAnimator,t.addEventListener("mousedown",(t=>this.gridCreator.handleEvents(t,"mousedown"))),t.addEventListener("mousemove",(t=>this.gridCreator.handleEvents(t,"mousemove"))),t.addEventListener("mouseup",(t=>this.gridCreator.handleEvents(t,"mouseup")))}createGrid(){this.gridCreator.createGrid()}async visualize(t){this.gridCreator.clearPaths(),await this.gridAnimator.visualize(t)}handleAlgoChange(t,e){this.gridCreator.handleAlgoChange(t,e)}async addRandomWalls(){await this.gridCreator.addRandomWalls()}clearGrid(){this.gridAnimator.reset(),this.gridCreator.clearGrid()}setAnimationSpeed(t){this.gridAnimator.setSpeed(t)}setWallAnimationSpeed(t){this.gridCreator.setWallAnimationSpeed(t)}}
//# sourceMappingURL=GridManager.js.map